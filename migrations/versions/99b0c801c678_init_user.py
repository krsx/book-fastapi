"""init_user

Revision ID: 99b0c801c678
Revises: 
Create Date: 2025-06-04 11:44:28.834479

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
import sqlmodel.sql.sqltypes
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '99b0c801c678'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
                    sa.Column('uid', sa.UUID(), nullable=False),
                    sa.Column(
                        'username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(),
                              nullable=True),
                    sa.Column(
                        'last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('is_verified', sa.Boolean(), nullable=False),
                    sa.Column(
                        'email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('password_hash',
                              sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('created_at', postgresql.TIMESTAMP(),
                              nullable=True),
                    sa.Column('updated_at', postgresql.TIMESTAMP(),
                              nullable=True),
                    sa.PrimaryKeyConstraint('uid'),
                    sa.UniqueConstraint('uid')
                    )
    op.alter_column('book', 'published_date',
                    existing_type=sa.VARCHAR(),
                    type_=sa.Date(),
                    existing_nullable=False,
                    postgresql_using='published_date::date')
    op.create_unique_constraint(None, 'book', ['uid'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('book', 'published_date',
                    existing_type=sa.Date(),
                    type_=sa.VARCHAR(),
                    existing_nullable=False,
                    postgresql_using='published_date::date')
    op.drop_table('user')
    # ### end Alembic commands ###
